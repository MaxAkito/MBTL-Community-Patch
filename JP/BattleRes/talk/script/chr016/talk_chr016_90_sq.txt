
Talk <-  // 何を追加してもいいが Finalize() で関数のみになること
{
	IsDone = 0, // ロードできたか
	Count = 0,
	Show = 0, // 描画が有効かどうか
};

// はじまり
function Talk::Initialize()
{
	local p = Talk;
	local fnc = tPAni;

	p.IsDone = 1; // とりあえず成功にしておく

	// 枠生成(ファイル単位)
	p.PA_Ed <- tPAni.CDat();
	p.PA_Manager <- fnc.CAniManager(); // マネージャ生成

	// PAniデータ読み込み
	local sFilePath = "./BattleRes/talk/st_pat";
	
	local sPcFile = format( "%s/chr016/chr016_ed00.pat", sFilePath );
	TalkSqCallback.UseFileInSquirrel( {type=0, file_name=sPcFile} );
	if( p.PA_Ed.Load( sPcFile ) == 0 )
	{
		//ロード失敗
		print( format( "\n >> %s Load error.", sPcFile ) );
		p.IsDone = 0;
	}
	else
	{
		//ロード成功
		p.Show = 1;//描画を有効にする
		
		//アニメーションを登録する
		local prio = 460; // 全体プライオリティ
		
		local framestep = 1.0/60; // 1フレーム
		local fWait = 0.0;
		local fr = 0;
		
		fr = p.PA_Manager.Add( p.PA_Ed, "se01_a" );
		fr.SetPrio( prio+10 );
		
		fr.AddTag( "wait" );
		fr.AddFrame( "", framestep );
		fr.AddModeTagJump( "wait", _PAniFlag_JpGrater, 1 );//Modeが値より大きくなるまでジャンプして非表示
		
		fr.AddFrame( "se01_a105", framestep * 90 );
		fr.AddFrame( "se01_a106", framestep * 90 );
		fr.AddFrame( "se01_a107", framestep * 90 );

		fr.AddFrame( "se01_a200", framestep * 90 );
		fr.AddFrame( "se01_a201", framestep * 1 );
		fr.AddFrame( "se01_a202", framestep * 1 );
		fr.AddJump( -1 );//停止
		
		
		fr = p.PA_Manager.Add( p.PA_Ed, "se02_a" );
		fr.SetPrio( prio+11 );
		
		fr.AddTag( "wait" );
		fr.AddFrame( "", framestep );
		fr.AddModeTagJump( "wait", _PAniFlag_JpGrater, 2 );//Modeが値より大きくなるまでジャンプして非表示
		
		fWait = framestep * 15;
		for(local i = 0;i <= 10;i++ )
		{
			local s = format( "se02_a%03d", i );
			fr.AddFrame( s, fWait );
		}
		fr.AddTag("loop")
		fr.AddFrame( "se02_a100", framestep * 4 );
		fr.AddFrame( "se02_a101", framestep * 4 );
		fr.AddTagJump("loop");
		
		//イデアブラッド系
		fr = p.PA_Manager.Add( p.PA_Ed, "ib_a" );
		fr.SetPrio( prio+15 );
		
		fr.AddTag( "wait" );
		fr.AddFrame( "", framestep );
		fr.AddModeTagJump( "wait", _PAniFlag_JpGrater, 3 );//Modeが値より大きくなるまでジャンプして非表示

		fr.AddFrame( "ib_a000", framestep * 20 );
		fr.AddTag("loop")
		for(local i = 100;i <= 119;i++ )
		{
			fr.AddFrame( format( "ib_a%03d", i ), framestep * 20 );
		}
		fr.AddTagJump("loop");
		
		fr = p.PA_Manager.Add( p.PA_Ed, "ib_b" );
		fr.SetPrio( prio+15 );
		
		fr.AddTag( "wait" );
		fr.AddFrame( "", framestep );
		fr.AddModeTagJump( "wait", _PAniFlag_JpGrater, 3 );//Modeが値より大きくなるまでジャンプして非表示
		
		for(local i = 0;i <= 13;i++ )
		{
			fr.AddFrame( format( "ib_b%03d", i ), framestep * 2 );
		}
		fr.AddTag("loop")
		fr.AddFrame( "ib_b100", framestep * 2 );
		fr.AddFrame( "ib_b101", framestep * 2 );
		fr.AddTagJump("loop");
		
		//突風
		fr = p.PA_Manager.Add( p.PA_Ed, "ib_b" );
		fr.SetPrio( prio+20 );
		
		fr.AddTag( "wait" );
		fr.AddFrame( "", framestep );
		fr.AddModeTagJump( "wait", _PAniFlag_JpGrater, 3 );//Modeが値より大きくなるまでジャンプして非表示
		
		fr.AddFrame( "kaze001", framestep * 15 );
		fr.AddFrame( "kaze002", framestep * 15 );
		fr.AddFrame( "kaze003", framestep * 15 );
		fr.AddTag("loop")
		fr.AddFrame( "kaze100", framestep * 15 );
		fr.AddFrame( "kaze101", framestep * 15 );
		fr.AddFrame( "kaze102", framestep * 15 );
		fr.AddFrame( "kaze103", framestep * 15 );
		fr.AddTagJump("loop");
		
		
		// 奥背景アルク
		fr = p.PA_Manager.Add( p.PA_Ed, "se02_b" );
		fr.SetPrio( prio );
		
		fr.AddTag( "wait" );
		fr.AddFrame( "", framestep );
		fr.AddModeTagJump( "wait", _PAniFlag_JpGrater, 2 );//Modeが値より大きくなるまでジャンプして非表示
		
		for(local i = 2;i <= 7;i++ )
		{
			fr.AddFrame( format( "se02_b%03d", i ), framestep * 15 );
		}
		
		fr.AddTag("loop")
		for(local i = 100;i <= 131;i++ )
		{
			fr.AddFrame( format( "se02_b%03d", i ), framestep * 15 );
		}
		fr.AddTagJump("loop");
	}
}

// 終了処理
function Talk::Finalize()
{
	local p = Talk;
	local fnc = tPAni;

	// アニメマネージャの解放、登録した中身も全部消える
	delete p.PA_Manager;

	// PAniオブジェクトの解放
	delete p.PA_Ed;

	delete Talk;

	print("\nTalk::Finalize()");
}

// 会話スクリプトからコールされる
function Talk::Call(call_no)
{
	print( format( "\nTalk Call:%d", call_no ) );
	
	local p = Talk;
	if( p.IsDone != 0 )
	{
		p.PA_Manager.SetMode(call_no);
		
		if( call_no == 2 )
		{
			//シーンが進んだら消す
			local fr = p.PA_Manager.GetCAnime( "se01_a" );
			fr.SetView(0);
		}
	}
}

// 会話スクリプトからウェイト(アニメ終了待ち等の)問い合わせ
function Talk::Wait(call_no)
{
	print( format( "\nTalk Wait:%d", call_no ) );
	return( 0 );	// 0でウェイト終了、それ以外の値でウェイト状態をキープ
}


// スタッフロールが表示される前(ED会話が終わった)のタイミングでコールされる
function Talk::GotoStaffRoll()
{
	print( format( "\nTalk GotoStaffRoll" ) );
	
	local p = Talk;
	p.Show = 0; // 描画を無効にする
}

// 最後の一枚絵が表示される前(スタッフロールが終わった)のタイミングでコールされる
function Talk::GotoEndingLastCG()
{
	print( format( "\nTalk GotoEndingLastCG" ) );
	
	local p = Talk;
	p.Show = 0; // 描画を無効にする
}


//
function Talk::Update()
{
	local p = Talk;
	local fnc = tPAni;

	if( p.Show )
	{
		p.PA_Manager.Update();
		p.Count++;
	}
}

//
function Talk::Render(add_x, add_y)
{
	local p = Talk;
	local fnc = tPAni;
	
	if( p.Show )
	{
		local pa_cx = 1280/2;
		local pa_cy = 720/2;

		p.PA_Ed.SetPosition( pa_cx+add_x, pa_cy+add_y );
		p.PA_Manager.Render();
	}
	

	//print( format( "\n[Count:%d]", p.Count ) );
}



print("\n\ntitle.txt Running!!!");
