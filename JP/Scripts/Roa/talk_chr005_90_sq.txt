
Talk <-  // 何を追加してもいいが Finalize() で関数のみになること
{
	IsDone = 0, // ロードできたか
	Count = 0,
	Show = 0, // 描画が有効かどうか
};

// はじまり
function Talk::Initialize()
{
	local p = Talk;
	local fnc = tPAni;

	p.IsDone = 1; // とりあえず成功にしておく

	local prio = 460; // 全体プライオリティ

	// 枠生成(ファイル単位)
	p.PA_Ed <- tPAni.CDat();
	p.PA_Manager <- fnc.CAniManager(); // マネージャ生成

	// PAniデータ読み込み
	local sFilePath = "./BattleRes/talk/st_pat";
	
	local sPcFile = format( "%s/chr005/chr005_ed00.pat", sFilePath );
	if( p.PA_Ed.Load( sPcFile ) == 0 )
	{
		//ロード失敗
		print( format( "\n >> %s Load error.", sPcFile ) );
		p.IsDone = 0;
	}
	else
	{
		//ロード成功
		p.Show = 1;//描画を有効にする
	}
}

// 終了処理
function Talk::Finalize()
{
	local p = Talk;
	local fnc = tPAni;

	// アニメマネージャの解放、登録した中身も全部消える
	delete p.PA_Manager;

	// PAniオブジェクトの解放
	delete p.PA_Ed;

	delete Talk;

	print("\nTalk::Finalize()");
}

// 会話スクリプトからコールされる
function Talk::Call(call_no)
{
	print( format( "\nCall Call:%d", call_no ) );


	local prio = 400; // 全体プライオリティ

	local p = Talk;
	local fnc = tPAni;
	if( p.IsDone != 0 )
	{
		// 中心表示位置設定
		local cx = 1280/2;
		local cy = (720/2);//+16; //下に16ドットズラす
		p.PA_Ed.SetPosition( cx, cy ); //
	
		local framestep = 1.0/60; // 1フレーム
		local fWait = 0.0;
		local fr = 0;
	
		// フレーム登録
	
		// 背景
		fr = p.PA_Manager.Add( p.PA_Ed, "bg" );
		fr.SetPrio( prio );
		
		fWait = framestep * 30;
		for(local i = 0;i <= 5;i++ )
		{
			local s = format( "bg_s%03d", i );
			fr.AddFrame( s, fWait );
		}
		fWait = framestep * 100;
		fr.AddTag("loop")
		for(local i = 0;i <= 3;i++ )
		{
			local s = format( "bg%03d", i );
			fr.AddFrame( s, fWait );
		}
		fr.AddModeTagJump( "endwait", _PAniFlag_JpEqual, 1 ); // Mode が 1 である場合に停止
		fr.AddTagJump("loop");
		
		// キャラ
		fr = p.PA_Manager.Add( p.PA_Ed, "chara" );
		fr.SetPrio( prio+10 );

		fWait = framestep * 30;
		for(local i = 0;i <= 5;i++ )
		{
			local s = format( "arc_s%03d", i );
			fr.AddFrame( s, fWait );
		}		
		fWait = framestep * 40;
		fr.AddTag("loop")
		for(local i = 0;i <= 9;i++ )
		{
			local s = format( "arc_%03d", i );
			fr.AddFrame( s, fWait );
		}
		fr.AddTagJump("loop");
		
		// キャラの手前花びら
		fr = p.PA_Manager.Add( p.PA_Ed, "hana_a" );
		fr.SetPrio( prio+20 );
		
		fWait = framestep * 6;
		for(local i = 0;i <= 24;i++ )
		{
			local s = format( "hana_a_s%03d", i );
			fr.AddFrame( s, fWait );
		}
		fWait = framestep * 6;
		fr.AddTag("loop")
		for(local i = 0;i <= 23;i++ )
		{
			local s = format( "hana_a%03d", i );
			fr.AddFrame( s, fWait );
		}
		fr.AddTagJump("loop");

		// キャラの奥花びら1
		fr = p.PA_Manager.Add( p.PA_Ed, "hana_b1" );
		fr.SetPrio( prio+5 );
		
		fWait = framestep * 30;
		for(local i = 0;i <= 5;i++ )
		{
			local s = format( "hana_b_s%03d", i );
			fr.AddFrame( s, fWait );
		}
		fWait = framestep * 100;
		fr.AddTag("loop")
		for(local i = 0;i <= 6;i++ )
		{
			local s = format( "hana_b%03d", i );
			fr.AddFrame( s, fWait );
		}
		fr.AddTagJump("loop");
		
		
		// キャラの奥花びら2
		fr = p.PA_Manager.Add( p.PA_Ed, "hana_b2" );
		fr.SetPrio( prio+6 );
		
		fWait = framestep * 30;
		for(local i = 100;i <= 105;i++ )
		{
			local s = format( "hana_b_s%03d", i );
			fr.AddFrame( s, fWait );
		}
		fWait = framestep * 100;
		fr.AddTag("loop")
		for(local i = 100;i <= 106;i++ )
		{
			local s = format( "hana_b%03d", i );
			fr.AddFrame( s, fWait );
		}
		fr.AddTagJump("loop");		
		
		/*
		// 最手前のフェード用板
		fr = p.PA_Manager.Add( p.PA_Ed, "black" );
		fr.SetPrio( prio+50 );
		fWait = framestep * 120;
		
		//フェード　黒→透明
		fr.AddFrame( "black001", fWait );
		fr.AddFrame( "black000", fWait );
		fr.AddJump( -1 ); //停止
		*/
	}

}

// 会話スクリプトからウェイト(アニメ終了待ち等の)問い合わせ
function Talk::Wait(call_no)
{
	print( format( "\nTalk Wait:%d", call_no ) );
	return( 0 );	// 0でウェイト終了、それ以外の値でウェイト状態をキープ
}


// スタッフロールが表示される前(ED会話が終わった)のタイミングでコールされる
function Talk::GotoStaffRoll()
{
	print( format( "\nTalk GotoStaffRoll" ) );
	
	local p = Talk;
	p.Show = 0; // 描画を無効にする
}

// 最後の一枚絵が表示される前(スタッフロールが終わった)のタイミングでコールされる
function Talk::GotoEndingLastCG()
{
	print( format( "\nTalk GotoEndingLastCG" ) );
	
	local p = Talk;
	p.Show = 0; // 描画を無効にする
}


//
function Talk::Update()
{
	local p = Talk;
	local fnc = tPAni;

	if( p.Show )
	{
		p.PA_Manager.Update();
		p.Count++;
	}
}

//
function Talk::Render(add_x, add_y)
{
	local p = Talk;
	local fnc = tPAni;
	
	if( p.Show )
	{
		p.PA_Manager.Render();
	}

	//print( format( "\n[Count:%d]", p.Count ) );
}



print("\n\ntitle.txt Running!!!");
